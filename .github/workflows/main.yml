name: Release
on: [push]
#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ release-gh-action ]

env:
  GITHUB_TOKEN: ${{ github.token }}
#  RUST_BACKTRACE: 1

jobs:
  release:
    name: ${{ matrix.platform.os_name }} with rust ${{ matrix.toolchain }}
    runs-on: ${{ matrix.platform.os }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - os_name: Linux-x86_64
            os: ubuntu-22.04
            target: x86_64-unknown-linux-musl
            bin: readwise-to-omnivore-importer
            name: readwise-to-omnivore-importer-Linux-x86_64-musl.tar.gz
          - os_name: Windows-x86_64
            os: windows-latest
            target: x86_64-pc-windows-msvc
            bin: readwise-to-omnivore-importer.exe
            name: readwise-to-omnivore-importer-Windows-x86_64.zip
          - os_name: macOS-x86_64
            os: macOS-latest
            target: x86_64-apple-darwin
            bin: readwise-to-omnivore-importer
            name: readwise-to-omnivore-importer-Darwin-x86_64.tar.gz
          - os_name: macOS-aarch64
            os: macOS-latest
            target: aarch64-apple-darwin
            bin: readwise-to-omnivore-importer
            name: readwise-to-omnivore-importer-Darwin-aarch64.tar.gz
            skip_tests: true
        toolchain:
          - stable
    steps:
      - uses: actions/checkout@v3
      - name: Cache cargo & target directories
        uses: Swatinem/rust-cache@v2
#      - name: Configure Git
#        run: |
#          git config --global user.email "jdoe@example.com"
#          git config --global user.name "J. Doe"
      - name: Install musl-tools on Linux
        run: sudo apt-get update --yes && sudo apt-get install --yes musl-tools
        if: contains(matrix.platform.name, 'musl')
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: "build"
          target: ${{ matrix.platform.target }}
          toolchain: ${{ matrix.toolchain }}
          args: "--release"
          strip: true
#      - name: Run tests
#        uses: houseabsolute/actions-rust-cross@v0
#        with:
#          command: "test"
#          target: ${{ matrix.platform.target }}
#          toolchain: ${{ matrix.toolchain }}
#          args: "--locked --release"
#        if: ${{ !matrix.platform.skip_tests }}
      - name: Package as archive
        shell: bash
        run: |
          cd target/${{ matrix.platform.target }}/release
          if [[ "${{ matrix.platform.os }}" == "windows-latest" ]]; then
            7z a ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          else
            tar czvf ../../../${{ matrix.platform.name }} ${{ matrix.platform.bin }}
          fi
          cd -
#        if: |
#          matrix.toolchain == 'stable' &&
#          ( startsWith( github.ref, 'refs/tags/v' ) ||
#            github.ref == 'refs/tags/test-release' )
      - name: Publish release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: readwise-to-omnivore-importer-${{ matrix.platform.os_name }}
          path: "readwise-to-omnivore-importer-*"
        if: matrix.toolchain == 'stable'
#      - name: Generate SHA-256
#        run: shasum -a 256 ${{ matrix.platform.name }}
#        if: |
#          matrix.toolchain == 'stable' &&
#          matrix.platform.os == 'macOS-latest' &&
#          ( startsWith( github.ref, 'refs/tags/v' ) ||
#            github.ref == 'refs/tags/test-release' )
#      - name: Publish GitHub release
#        uses: softprops/action-gh-release@v1
#        with:
#          draft: true
#          files: "readwise-to-omnivore-importer-*"
#          body_path: Changes.md
#        if: matrix.toolchain == 'stable' && startsWith( github.ref, 'refs/tags/v' )